# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'proje.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import numpy as np
import pandas as pd
from PyQt5 import QtCore, QtGui, QtWidgets


from os import path
import sys
sys.path.append(path.abspath('./ml.py'))
from ml import load_dataset, train_model, test_model, save_model, load_model, scaler, folds

def err_msg():
    msg = QtWidgets.QMessageBox()
    msg.setWindowTitle("Hata!")
    msg.setText("Lütfen eksik bir işlem yapmadığınızdan emin olun.")
    msg.setIcon(QtWidgets.QMessageBox.Critical)
    msg.exec_()


class Ui_MainWindow(object):

    global models
    models = ["Decision Tree", "Random Forest", "KNN"]

    def init(self):
        global X_p
        df = pd.read_csv("./datasets/heart.csv")
        datas = df.values

        size = datas.shape[1]
        y_p = datas[:, size-1]
        X_p = datas[:, 0:size-1]

        # row count
        self.tablePredict.setRowCount(X_p.shape[0])
        # column count
        self.tablePredict.setColumnCount(size)
        self.tablePredict.setHorizontalHeaderLabels(df.columns)
        # tabloya yazdır
        for i, data in enumerate(X_p):
            for j in range(0, len(data)):
                self.tablePredict.setItem(
                    i, j,  QtWidgets.QTableWidgetItem(str(data[j])))
            self.tablePredict.setItem(
                i, size-1, QtWidgets.QTableWidgetItem(str(y_p[i])))

    def load_dataset(self,path):
        global dataset
        dataset = pd.read_csv(path)
        global X, y, X_train, y_train, X_test, y_test, attr_num
        X, y, X_train, y_train, X_test, y_test, attr_num = load_dataset(
            dataset)

        # row count
        self.tableDataset.setRowCount(X.shape[0])
        # column count
        self.tableDataset.setColumnCount(attr_num)
        self.tableDataset.setHorizontalHeaderLabels(dataset.columns)
        # tabloya yazdır
        for i, data in enumerate(X):
            for j in range(0, len(data)):
                self.tableDataset.setItem(
                    i, j,  QtWidgets.QTableWidgetItem(str(data[j])))
            self.tableDataset.setItem(
                i, attr_num-1, QtWidgets.QTableWidgetItem(str(y[i])))

        # tableTrain doldurma
        self.tableTrain.setRowCount(X_train.shape[0])
        self.tableTrain.setColumnCount(attr_num)
        self.tableTrain.setHorizontalHeaderLabels(dataset.columns)
        for i, data in enumerate(X_train):
            for j in range(0, len(data)):
                self.tableTrain.setItem(
                    i, j,  QtWidgets.QTableWidgetItem(str(data[j])))
            self.tableTrain.setItem(
                i, attr_num-1, QtWidgets.QTableWidgetItem(str(y_train[i])))

        # tableTest doldurma
        self.tableTest.setRowCount(X_test.shape[0])
        self.tableTest.setColumnCount(attr_num)
        self.tableTest.setHorizontalHeaderLabels(dataset.columns)
        for i, data in enumerate(X_test):
            for j in range(0, len(data)):
                self.tableTest.setItem(
                    i, j,  QtWidgets.QTableWidgetItem(str(data[j])))
            self.tableTest.setItem(
                i, attr_num-1, QtWidgets.QTableWidgetItem(str(y_test[i])))
        self.cbCV.setEnabled(True)
        self.btnTrain.setEnabled(True)

    def train_model(self):
        try:
            n="2"
            if self.txtKfold.text()!='':
                n=self.txtKfold.text()

            train_model(self.cbModel.currentText(), self.cbCV.isChecked(), n)
            msg = QtWidgets.QMessageBox()
            msg.setWindowTitle("Train")
            msg.setText("Model eğitimi tamamlandı.")
            msg.exec_()
            self.cbIterasyon.clear()
            for a in range(int(n)):
                self.cbIterasyon.addItem(str(a))

        except Exception as e:
            print(e)
            err_msg()

    def test_model(self):

        try:
            self.txtAccuracy.setText(str(test_model()))
            self.get_cm("./temp/cm.png")

        except:
            err_msg()

    def get_cm(self, image_path):

        self.imgCM.setScene(None)
        scene = QtWidgets.QGraphicsScene()
        pixmap = QtGui.QPixmap(image_path)
        pixmapScaled = pixmap.scaled(360, 300, QtCore.Qt.KeepAspectRatio)
        item = QtWidgets.QGraphicsPixmapItem(pixmapScaled)
        scene.addItem(item)
        self.imgCM.setScene(scene)

    def save_model(self, path):
        if save_model(path):
            msg = QtWidgets.QMessageBox()
            msg.setWindowTitle("save")
            msg.setText("Model kaydedildi.")
            msg.exec_()

        else:
            err_msg()

    def load_model(self, path):
        try:
            global loadedModel
            loadedModel = load_model(path)
            p=path.split("/")
            self.txtModelName.setText(p[-1])
        except:
            err_msg()

    def reset(self):
        self.tableDataset.setRowCount(0)
        self.tableTrain.setRowCount(0)
        self.tableTest.setRowCount(0)
        self.txtAccuracy.setText("x")
        self.imgCM.setScene(None)
        dataset = None
        y = X_train = y_train = X_test = y_test = None
        loadedModel = None
        self.txtModelName.setText("X")

    def print_row(self):
        items = self.tablePredict.selectedItems()
        dataStr = ""
        for data in items:
            dataStr += str(data.text())+","
        self.lineEdit.setText(dataStr[:-1])

    def predict(self):
        try:

            input = self.lineEdit.text()
            split = input.split(",")
            data = np.asarray(split, dtype=float)
            data = np.expand_dims(data, axis=0)
            tmp_df = pd.DataFrame(X_p)
            tmp_df.loc[303] = data[0]
            tmp_df = scaler(tmp_df)
            data = np.expand_dims(tmp_df[-1], axis=0)
            pred = loadedModel.predict(data)
            self.txtOutput.setText(str(pred)[1])
        except:
            err_msg()

    def open_dataset(self):
        fileName = QtWidgets.QFileDialog.getOpenFileName(
            None, "Open File", "./dataset", "Dataset Files (*.csv)")
        if fileName:
            self.load_dataset(str(fileName[0]))

    def openFileNamesDialog(self):
        fileName = QtWidgets.QFileDialog.getOpenFileName(
            None, "Open File", "./temp", "Model Files (*.h5)")
        if fileName:
            self.load_model(str(fileName[0]))

    def saveFileDialog(self):
        fileName = QtWidgets.QFileDialog.getSaveFileName(
            None, "Save File", "./temp", "Model Files (*.h5)")
        if fileName:
            self.save_model(str(fileName[0]))

    def changedCV(self):
        cb = self.cbCV.isChecked()
        self.txtKfold.setEnabled(cb)
        self.cbIterasyon.setEnabled(cb)
        self.btnCV.setEnabled(cb)
        self.btnTrain.setEnabled(not cb)
        self.cbIterasyon.clear()
        if not cb:
            self.lblIterasyon.setText("")
            # tableTrain doldurma
        self.tableTrain.setRowCount(X_train.shape[0])
        self.tableTrain.setColumnCount(attr_num)
        self.tableTrain.setHorizontalHeaderLabels(dataset.columns)
        for i, data in enumerate(X_train):
            for j in range(0, len(data)):
                self.tableTrain.setItem(
                    i, j,  QtWidgets.QTableWidgetItem(str(data[j])))
            self.tableTrain.setItem(
                i, attr_num-1, QtWidgets.QTableWidgetItem(str(y_train[i])))

        # tableTest doldurma
        self.tableTest.setRowCount(X_test.shape[0])
        self.tableTest.setColumnCount(attr_num)
        self.tableTest.setHorizontalHeaderLabels(dataset.columns)
        for i, data in enumerate(X_test):
            for j in range(0, len(data)):
                self.tableTest.setItem(
                    i, j,  QtWidgets.QTableWidgetItem(str(data[j])))
            self.tableTest.setItem(
                i, attr_num-1, QtWidgets.QTableWidgetItem(str(y_test[i])))
        self.cbCV.setEnabled(True)
        self.btnTrain.setEnabled(True)

    def uygulaCV(self):

        try:
            self.train_model()
        except:
            err_msg()

    def iterasyonChanged(self):

        if self.cbCV.isChecked()&self.cbIterasyon.count()>0:
            iterasyon = int(self.cbIterasyon.currentText())

            self.lblIterasyon.setText("iterasyon: "+str(iterasyon))
            XTrainKF, yTrainKF, XValidKF, yValidKF, acc_log = folds()
            attr_num = XTrainKF[0].shape[1]
            # tableTrain doldurma
            self.tableTrain.setRowCount(XTrainKF[iterasyon].shape[0])
            self.tableTrain.setColumnCount(attr_num)
            self.tableTrain.setHorizontalHeaderLabels(dataset.columns)
            for i, data in enumerate(XTrainKF[int(iterasyon)]):
                for j in range(0, len(data)):
                    self.tableTrain.setItem(
                        i, j,  QtWidgets.QTableWidgetItem(str(data[j])))
                self.tableTrain.setItem(
                    i, attr_num-1, QtWidgets.QTableWidgetItem(str(yTrainKF[int(iterasyon)][i])))
            # tableTest doldurma
            self.tableTest.setRowCount(XValidKF[iterasyon].shape[0])
            self.tableTest.setColumnCount(attr_num)
            self.tableTest.setHorizontalHeaderLabels(dataset.columns)
            for i, data in enumerate(XValidKF[iterasyon]):
                for j in range(0, len(data)):
                    self.tableTest.setItem(
                        i, j,  QtWidgets.QTableWidgetItem(str(data[j])))
                self.tableTest.setItem(
                    i, attr_num-1, QtWidgets.QTableWidgetItem(str(yValidKF[iterasyon][i])))
            self.txtAccuracy.setText(str(acc_log[iterasyon]))
            self.get_cm("./temp/iterasyon/cm"+str(iterasyon)+".png")

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(801, 610)
        MainWindow.setProperty("Hold out", "")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setEnabled(True)
        self.tabWidget.setGeometry(QtCore.QRect(0, 0, 801, 581))
        self.tabWidget.setObjectName("tabWidget")
        self.Tab = QtWidgets.QWidget()
        self.Tab.setEnabled(True)
        self.Tab.setObjectName("Tab")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.Tab)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(9, 9, 781, 531))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.tableDataset = QtWidgets.QTableWidget(self.verticalLayoutWidget)
        self.tableDataset.setObjectName("tableDataset")
        self.tableDataset.setColumnCount(0)
        self.tableDataset.setRowCount(0)
        self.verticalLayout.addWidget(self.tableDataset)

        # dataset buton
        self.btnLoadDataset = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.btnLoadDataset.setObjectName("btnLoadDataset")
        self.btnLoadDataset.clicked.connect(self.open_dataset)

        self.verticalLayout.addWidget(self.btnLoadDataset)
        self.tabWidget.addTab(self.Tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setEnabled(True)
        self.tab_2.setObjectName("tab_2")
        self.verticalLayoutWidget_2 = QtWidgets.QWidget(self.tab_2)
        self.verticalLayoutWidget_2.setGeometry(QtCore.QRect(10, 10, 781, 531))
        self.verticalLayoutWidget_2.setObjectName("verticalLayoutWidget_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(
            self.verticalLayoutWidget_2)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout()
        self.verticalLayout_6.setContentsMargins(-1, 10, -1, 10)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.label_4 = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_4.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.label_4.setObjectName("label_4")
        self.verticalLayout_6.addWidget(self.label_4)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setContentsMargins(10, 0, 0, -1)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")

        # cbModel
        self.cbModel = QtWidgets.QComboBox(self.verticalLayoutWidget_2)
        self.cbModel.setObjectName("cbModel")
        self.cbModel.addItems(models)

        self.horizontalLayout_4.addWidget(self.cbModel)
        spacerItem = QtWidgets.QSpacerItem(
            40, 20, QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem)
        spacerItem1 = QtWidgets.QSpacerItem(
            40, 20, QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem1)
        spacerItem2 = QtWidgets.QSpacerItem(
            40, 20, QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem2)
        self.verticalLayout_6.addLayout(self.horizontalLayout_4)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setContentsMargins(10, 0, 0, -1)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")

        # cbCV
        self.cbCV = QtWidgets.QCheckBox(self.verticalLayoutWidget_2)
        self.cbCV.setObjectName("cbCV")
        self.cbCV.stateChanged.connect(self.changedCV)
        self.cbCV.setEnabled(False)

        self.horizontalLayout_7.addWidget(self.cbCV)
        spacerItem3 = QtWidgets.QSpacerItem(
            40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_7.addItem(spacerItem3)
        self.label_8 = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_8.setObjectName("label_8")
        self.horizontalLayout_7.addWidget(self.label_8)

        # txtKfold
        self.txtKfold = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.txtKfold.setObjectName("txtKfold")
        self.txtKfold.setEnabled(False)

        self.horizontalLayout_7.addWidget(self.txtKfold)

        # btnCV
        self.btnCV = QtWidgets.QPushButton(self.verticalLayoutWidget_2)
        self.btnCV.setEnabled(False)
        self.btnCV.clicked.connect(self.uygulaCV)
        self.btnCV.setText("Uygula")
        self.horizontalLayout_7.addWidget(self.btnCV)

        self.label_7 = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_7.setAlignment(
            QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.label_7.setObjectName("label_7")
        self.horizontalLayout_7.addWidget(self.label_7)

        # cbIterasyon
        self.cbIterasyon = QtWidgets.QComboBox(self.verticalLayoutWidget_2)
        self.cbIterasyon.setObjectName("cbIterasyon")
        self.cbIterasyon.setEnabled(False)
        self.cbIterasyon.currentTextChanged.connect(self.iterasyonChanged)
        self.horizontalLayout_7.addWidget(self.cbIterasyon)

        spacerItem4 = QtWidgets.QSpacerItem(
            40, 20, QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_7.addItem(spacerItem4)

        spacerItem5 = QtWidgets.QSpacerItem(
            40, 20, QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_7.addItem(spacerItem5)
        self.verticalLayout_6.addLayout(self.horizontalLayout_7)
        self.verticalLayout_2.addLayout(self.verticalLayout_6)
        self.verticalLayout_3 = QtWidgets.QVBoxLayout()
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.label_3 = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_3.setObjectName("label_3")
        self.verticalLayout_3.addWidget(self.label_3)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 10)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.tableTrain = QtWidgets.QTableWidget(self.verticalLayoutWidget_2)
        self.tableTrain.setObjectName("tableTrain")
        self.tableTrain.setColumnCount(0)
        self.tableTrain.setRowCount(0)
        self.horizontalLayout_3.addWidget(self.tableTrain)
        self.verticalLayout_3.addLayout(self.horizontalLayout_3)
        self.verticalLayout_2.addLayout(self.verticalLayout_3)

        # Train buton
        self.btnTrain = QtWidgets.QPushButton(self.verticalLayoutWidget_2)
        self.btnTrain.setObjectName("btnTrain")
        self.btnTrain.setEnabled(False)
        self.btnTrain.clicked.connect(self.train_model)

        self.verticalLayout_2.addWidget(self.btnTrain)
        self.lbl_info = QtWidgets.QLabel(self.tab_2)
        self.lbl_info.setGeometry(QtCore.QRect(370, 550, 55, 16))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active,
                         QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 63, 63))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active,
                         QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active,
                         QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active,
                         QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active,
                         QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active,
                         QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive,
                         QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 63, 63))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive,
                         QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive,
                         QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive,
                         QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive,
                         QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive,
                         QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive,
                         QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled,
                         QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 63, 63))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled,
                         QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled,
                         QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled,
                         QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled,
                         QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled,
                         QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled,
                         QtGui.QPalette.ToolTipText, brush)
        self.lbl_info.setPalette(palette)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.lbl_info.setFont(font)
        self.lbl_info.setText("")
        self.lbl_info.setObjectName("lbl_info")
        self.tabWidget.addTab(self.tab_2, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setEnabled(True)
        self.tab_3.setObjectName("tab_3")
        self.verticalLayoutWidget_4 = QtWidgets.QWidget(self.tab_3)
        self.verticalLayoutWidget_4.setGeometry(QtCore.QRect(10, 10, 781, 531))
        self.verticalLayoutWidget_4.setObjectName("verticalLayoutWidget_4")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(
            self.verticalLayoutWidget_4)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.label_5 = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setAlignment(QtCore.Qt.AlignCenter)
        self.label_5.setObjectName("label_5")
        self.verticalLayout_4.addWidget(self.label_5)
        self.tableTest = QtWidgets.QTableWidget(self.verticalLayoutWidget_4)
        self.tableTest.setObjectName("tableTest")
        self.tableTest.setColumnCount(0)
        self.tableTest.setRowCount(0)
        self.verticalLayout_4.addWidget(self.tableTest)

        # btnTest
        self.btnTest = QtWidgets.QPushButton(self.verticalLayoutWidget_4)
        self.btnTest.setObjectName("btnTest")
        self.btnTest.clicked.connect(self.test_model)

        self.verticalLayout_4.addWidget(self.btnTest)
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setContentsMargins(-1, 0, -1, 0)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        spacerItem6 = QtWidgets.QSpacerItem(
            40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem6)

        self.imgCM = QtWidgets.QGraphicsView(self.verticalLayoutWidget_4)

        self.imgCM.setObjectName("imgCM")
        self.horizontalLayout_6.addWidget(self.imgCM)
        spacerItem7 = QtWidgets.QSpacerItem(
            40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem7)
        self.verticalLayout_4.addLayout(self.horizontalLayout_6)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setContentsMargins(-1, 0, -1, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setAlignment(
            QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.label.setObjectName("label")
        self.horizontalLayout.addWidget(self.label)
        self.txtAccuracy = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.txtAccuracy.setFont(font)
        self.txtAccuracy.setObjectName("txtAccuracy")
        self.horizontalLayout.addWidget(self.txtAccuracy)
        self.lblIterasyon = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        font = QtGui.QFont()
        font.setPointSize(10)

        self.lblIterasyon.setFont(font)
        self.lblIterasyon.setObjectName("lblIterasyon")
        self.horizontalLayout.addWidget(self.lblIterasyon)

        self.btnReset = QtWidgets.QPushButton(self.verticalLayoutWidget_4)
        self.btnReset.setObjectName("btnReset")
        self.btnReset.clicked.connect(self.reset)
        self.horizontalLayout.addWidget(self.btnReset)

        self.btnSaveModel = QtWidgets.QPushButton(self.verticalLayoutWidget_4)
        self.btnSaveModel.setObjectName("btnSaveModel")
        self.btnSaveModel.clicked.connect(self.saveFileDialog)

        self.horizontalLayout.addWidget(self.btnSaveModel)
        self.verticalLayout_4.addLayout(self.horizontalLayout)
        self.tabWidget.addTab(self.tab_3, "")
        self.tab_4 = QtWidgets.QWidget()
        self.tab_4.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.tab_4.setAccessibleName("")
        self.tab_4.setObjectName("tab_4")
        self.verticalLayoutWidget_5 = QtWidgets.QWidget(self.tab_4)
        self.verticalLayoutWidget_5.setGeometry(QtCore.QRect(10, 10, 781, 531))
        self.verticalLayoutWidget_5.setObjectName("verticalLayoutWidget_5")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(
            self.verticalLayoutWidget_5)
        self.verticalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.label_6 = QtWidgets.QLabel(self.verticalLayoutWidget_5)
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_6.setFont(font)
        self.label_6.setAlignment(QtCore.Qt.AlignCenter)
        self.label_6.setObjectName("label_6")
        self.verticalLayout_5.addWidget(self.label_6)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setContentsMargins(-1, 0, -1, -1)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")

        # btnLoad
        self.btnSelectModel = QtWidgets.QPushButton(
            self.verticalLayoutWidget_5)
        self.btnSelectModel.setObjectName("btnSelectModel")
        self.btnSelectModel.clicked.connect(self.openFileNamesDialog)

        self.horizontalLayout_5.addWidget(self.btnSelectModel)
        self.txtModelName = QtWidgets.QLabel(self.verticalLayoutWidget_5)
        self.txtModelName.setObjectName("txtModelName")
        self.horizontalLayout_5.addWidget(self.txtModelName)
        self.verticalLayout_5.addLayout(self.horizontalLayout_5)

        self.tablePredict = QtWidgets.QTableWidget(self.verticalLayoutWidget_5)
        self.tablePredict.setObjectName("tablePredict")
        self.tablePredict.setColumnCount(0)
        self.tablePredict.setRowCount(0)
        self.tablePredict.setSelectionBehavior(QtWidgets.QTableView.SelectRows)
        self.tablePredict.itemSelectionChanged.connect(self.print_row)
        self.init()

        self.verticalLayout_5.addWidget(self.tablePredict)
        self.lineEdit = QtWidgets.QLineEdit(self.verticalLayoutWidget_5)
        self.lineEdit.setObjectName("lineEdit")
        self.verticalLayout_5.addWidget(self.lineEdit)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setContentsMargins(-1, 0, -1, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")

        self.btnPredict = QtWidgets.QPushButton(self.verticalLayoutWidget_5)
        self.btnPredict.setObjectName("btnPredict")
        self.btnPredict.clicked.connect(self.predict)

        self.horizontalLayout_2.addWidget(self.btnPredict)
        self.label_2 = QtWidgets.QLabel(self.verticalLayoutWidget_5)
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setAlignment(
            QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout_2.addWidget(self.label_2)
        self.txtOutput = QtWidgets.QLabel(self.verticalLayoutWidget_5)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.txtOutput.setFont(font)
        self.txtOutput.setObjectName("txtOutput")
        self.horizontalLayout_2.addWidget(self.txtOutput)
        self.verticalLayout_5.addLayout(self.horizontalLayout_2)
        self.tabWidget.addTab(self.tab_4, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.btnLoadDataset.setText(
            _translate("MainWindow", "Verisetini Yükle"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(
            self.Tab), _translate("MainWindow", "Veri Seti"))
        self.label_4.setText(_translate("MainWindow", "Model Seçiniz"))
        self.cbCV.setText(_translate("MainWindow", "Cross Validation"))
        self.label_8.setText(_translate("MainWindow", "n_splits"))
        self.label_7.setText(_translate("MainWindow", "iterasyon:"))
        self.label_3.setText(_translate("MainWindow", "Train"))
        self.btnTrain.setText(_translate("MainWindow", "Modeli Eğit"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(
            self.tab_2), _translate("MainWindow", "Model"))
        self.label_5.setText(_translate("MainWindow", "Test"))
        self.btnTest.setText(_translate("MainWindow", "Test işlemini yap"))
        self.label.setText(_translate("MainWindow", "Accuracy:"))
        self.txtAccuracy.setText(_translate("MainWindow", "x"))
        self.lblIterasyon.setText(_translate("MainWindow", "iterasyon:X"))
        self.btnReset.setText(_translate("MainWindow", "Sıfırla"))
        self.btnSaveModel.setText(_translate("MainWindow", "Modeli Kaydet"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(
            self.tab_3), _translate("MainWindow", "Sonuç"))
        self.label_6.setText(_translate("MainWindow", "Kalp Krizi Tahmin"))
        self.btnSelectModel.setText(_translate("MainWindow", "Model Seç"))
        self.txtModelName.setText(_translate("MainWindow", "x"))
        self.btnPredict.setText(_translate("MainWindow", "Tahmin"))
        self.label_2.setText(_translate("MainWindow", "Output:"))
        self.txtOutput.setText(_translate("MainWindow", "x"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(
            self.tab_4), _translate("MainWindow", "Modeli Kullan"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
